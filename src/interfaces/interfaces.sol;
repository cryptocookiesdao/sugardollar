pragma solidity ^0.8.0;
import {IERC20} from "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface IERC20Burnable is IERC20 {
    function burn(uint256 amount) external;

    function burnFrom(address account, uint256 amount) external;

    function mint(address account, uint256 amount) external;
}

interface IBankVault {
    function totalUSDC() external view returns (uint256);

    function transferUSDC(address account, uint256 amount)
        external
        returns (uint256);
}

interface IGame {
    function sugarBankMint(address _to, uint256 _amount) external;
}

interface IOracle {
    function USDCPrice() external returns (uint256);

    function sugarDollarPrice() external returns (uint256);

    function cookieUSDPrice() external returns (uint256);
}

interface ICollateralPolicy {
    function updateAndGet() external returns (uint256);
}

interface IOracleSimple {
    function update() external;

    function consult(address token, uint256 amountIn)
        external
        view
        returns (uint256 amountOut);
}

interface IChainlinkFeed {
    function latestRoundData()
        external
        view
        returns (
            uint80 roundId,
            int256 answer,
            uint256 startedAt,
            uint256 updatedAt,
            uint80 answeredInRound
        );
}

